const filler = (id, length = 5) => Array.from({ length }).fill(id);

const getRows = (...cols) => [cols.reduce((a, c) => {
  const [id, length] = c;
  return [...a, ...filler(id, length)];
}, [])]

export const map1CellSize = 25;

export const map1 = [
  ...getRows([1, 2], [0, 2], [2, 4], [0, 2], [3, 2]),
  ...getRows([1, 1], [0, 3], [2, 1], [0, 2], [2, 1], [0, 3], [3, 1]),
  ...getRows([0, 2], [4, 1], [0, 6], [5, 1], [0, 2]),
  ...getRows([0, 12]),
  ...getRows([6, 2], [0, 1], [7, 2], [0, 2], [8, 2], [0, 1], [9, 2]),
  ...getRows([6, 1], [0, 2], [7, 2], [0, 2], [8, 2], [0, 2], [9, 1]),
  ...getRows([6, 1], [0, 10], [9, 1]),
  ...getRows([6, 1], [0, 1], [10, 2], [0, 1], [11, 2], [0, 1], [12, 2], [0, 1], [9, 1]),
  ...getRows([0, 2], [10, 1], [0, 2], [11, 2], [0, 2], [12, 1], [0, 2]),
  // Center
  ...getRows([0, 2], [10, 1], [0, 2], [11, 2], [0, 2], [12, 1], [0, 2]),
  ...getRows([13, 1], [0, 1], [10, 2], [0, 1], [11, 2], [0, 1], [12, 2], [0, 1], [16, 1]),
  ...getRows([13, 1], [0, 10], [16, 1]),
  ...getRows([13, 1], [0, 2], [14, 2], [0, 2], [15, 2], [0, 2], [16, 1]),
  ...getRows([13, 2], [0, 1], [14, 2], [0, 2], [15, 2], [0, 1], [16, 2]),
  ...getRows([0, 12]),
  ...getRows([0, 2], [17, 1], [0, 6], [18, 1], [0, 2]),
  ...getRows([19, 1], [0, 3], [20, 1], [0, 2], [20, 1], [0, 3], [21, 1]),
  ...getRows([19, 2], [0, 2], [20, 4], [0, 2], [21, 2]),
]
